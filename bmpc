#!/bin/bash

# BASH MPD Client

# Constants
c1="\e[1;33m" # Bold Yellow
c2="\e[1;36m" # Bold Blue
c3="\e[1;37m" # Bold White
c4="\e[1;32m" # Bold Green
c5="\e[1;31m" # Bold Red
bold="\e[1m"
underline="\e[4m"
c0="\e[0m"

# MPD server settings

if [ -z "$MPD_HOST" ]; then HOST="localhost"; else HOST="$MPD_HOST"; fi
if [ -z "$MPD_PORT" ]; then PORT="6600"; else PORT="$MPD_PORT"; fi
MPD_TCP="/dev/tcp/$HOST/$PORT"

# Common Functions

function mpd_sndcommmand() {
        # $1 command
        exec 5<> $MPD_TCP 2>/dev/null
        [[ $? -gt 0 ]] && return 1
        echo $1 >&5
        echo "close" >&5
        tmp=$(cat <&5)
        exec 5>&-
        _ret=$(head -n -1 <<< "$tmp" | tail -n +2)
        return 0
}

function mpd_getinfo() {
	if [[ `pgrep mpd` ]]; then
		mpd_sndcommmand currentsong
		[[ $? -gt 0 ]] && return 1
		_tmp=$_ret
		mpdTitle=$(grep "^Title: " <<< "$_tmp" 2>/dev/null | sed "s/Title: //")
		mpdArtist=$(grep "^Artist: " <<< "$_tmp" 2>/dev/null | sed "s/Artist: //")
		mpdAlbum=$(grep "^Album: " <<< "$_tmp" 2>/dev/null | sed "s/Album: //")
		_songtime=$(grep "^Time: " <<< "$_tmp" 2>/dev/null | sed "s/Time: //" | cut -f 1 -d :)
		(( _mm=$_songtime / 60 ))
		[[ ${#_mm} -eq 1 ]] && _mm="0$_mm"
		(( _ss=$_songtime - $_mm * 60 ))
		[[ ${#_ss} -eq 1 ]] && _ss="0$_ss"
		mpdLength="$_mm:$_ss"
		mpdDate=$(grep "^Date: " <<< "$_tmp" 2>/dev/null | sed "s/Date: //")
		mpdGenre=$(grep "^Genre: " <<< "$_tmp" 2>/dev/null | sed "s/Genre: //")
		mpd_sndcommmand "status"
		_tmp=$_ret
		mpdSongID=$(grep "^song: " <<< "$_tmp" 2>/dev/null | sed "s/song: //")
		mpdPlaylistL=$(grep "^playlistlength: " <<< "$_tmp" 2>/dev/null | sed "s/playlistlength: //")
		_nowtime=$(grep "^time: " <<< "$_tmp" 2>/dev/null | sed "s/time: //" | awk -F":" '{print $1}')
		(( _mm=$_nowtime / 60 ))
		[[ ${#_mm} -eq 1 ]] && _mm="0$_mm"
		(( _ss=$_nowtime - $_mm * 60 ))
		[[ ${#_ss} -eq 1 ]] && _ss="0$_ss"
		mpdNowTime="$_mm:$_ss"
		mpdBitrate=$(grep "^bitrate: " <<< "$_tmp" 2>/dev/null | sed "s/bitrate: //")
	else
	        echo -e "\e[1;31mERROR! \e[0m\e[1mNo currently playing song. (MPD stopped?)\e[0m"
		exit
	fi
}

function displayHelp() {
	echo -e "${c1}bmpc${c0} : The BASH MPD Client\e[0m"
	echo -e "\t${c2} help | -h${c0}\t\e[0m Display this help message."
        echo -e "\t${c2} next${c0}\t\t\e[0m Jump to next song on playlist."
        echo -e "\t${c2} prev${c0}\t\t\e[0m Jump to previous song on playlist."
}

# Code

case "$1" in
	'-h'|'help')
		displayHelp
		exit
	;;
	'next')
		mpd_sndcommmand next
		mpd_getinfo
		echo -e " ${c4}>>>  ${c2}(${c0} ${mpdSongID} ${bold}/${c0} ${mpdPlaylistL} ${c2})${c0} ${c2}(${c0} ${mpdTitle} ${bold}-${c0} ${mpdArtist} ${bold}-${c0} ${mpdAlbum} ${c2})${c0} ${c2}(${c0} ${mpdLength}${bold} at${c0} ${mpdBitrate} ${c2})${c0}"
	;;
	'prev')
		mpd_sndcommmand previous
		mpd_getinfo
		echo -e " ${c5}<<<  ${c2}(${c0} ${mpdSongID} ${bold}/${c0} ${mpdPlaylistL} ${c2})${c0} ${c2}(${c0} ${mpdTitle} ${bold}-${c0} ${mpdArtist} ${bold}-${c0} ${mpdAlbum} ${c2})${c0} ${c2}(${c0} ${mpdLength}${bold} at${c0} ${mpdBitrate} ${c2})${c0}"
	;;
esac
